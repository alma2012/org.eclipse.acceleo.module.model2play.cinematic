[comment encoding = UTF-8 /]
[**
 * The documentation of the module htmlActionStateFile.
 */]
[module generateTemplatePage('http://www.obeonetwork.org/dsl/cinematic/3.0.0')]

[import org::eclipse::acceleo::module::model2play::cinematic::common::utils]
[import org::eclipse::acceleo::module::model2play::cinematic::requests::requests]

[**
 * The documentation of the template genHtmlActionStateFile.
 * @param aActionState
 */]
[template public generateTemplatePage( aCinematicRoot : CinematicRoot )]

[for (aViewState : ViewState | aCinematicRoot.eAllContents(ViewState))]
[file ('app/views/'.concat(aViewState.gen_viewstate_name()).concat('.scala.html'), false, 'UTF-8')]

[if (aViewState.gen_viewstate_name().equalsIgnoreCase('main'))]

	[for (aViewContainer : ViewContainer | aViewState.viewContainers.eAllContents(ViewContainer)) ]
	[if(aViewContainer.name.equalsIgnoreCase('Header'))]
	['@'/](title: String)(content: Html)
	<!DOCTYPE html>
	<html>
		<head>
			<meta name="author" content="">
			<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		    <title>['@'/]title</title>
			--<link rel="stylesheet" media="screen" href="fichier.css">   
		</head>
		<body>
			<div class="page container">
				<header class="jumbotron subhead" id="overview">
					<h3>Welcome</h3>
				
					<div class="navbar">
				 		<div class="navbar-inner">
							<div class="container">
						      	<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
									<span class="icon-bar"></span>
									<span class="icon-bar"></span>
									<span class="icon-bar"></span>
						      	</a>
							    <div id="nav_collapse">
									<ul class="nav">
									  <li class="active"><a id="shop_header" href="/shop">Home </a></li>
									  <li ><a id="user_cart" alt="your cart" href="/cart">Cart</a></li>
									  <li >	<a href="login">Login</a> </li >	      
									  <li >	<a href="register">Register</a> </li >	      
									  }
									  <!-- Start of user code post nav -->
									</ul>
						
									<ul class="nav" style="float: right;">
									  <li class="active">
									    <form action="logout" style="margin-top:5px" method="post">
									      <a href="javascript:;"  onclick="parentNode.submit();">Logout</a>
									      <input type="hidden" name="Logout"/>
									    </form>
									  </li>
									</ul>
					      		</div>
					   	 	</div>	  
				  		</div>	  
					</div>	  
			    </header>

				<div class="mycontent">
					<h1>['@'/]title</h1>
					['@'/]content
			    </div>
	[elseif (aViewContainer.name.equalsIgnoreCase('Footer'))]
			    <footer class="navbar-inner">
					<!-- Start of user code footer -->
		
					<!-- End of user code -->
			    </footer>

	[/if]
	[/for]

	
[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('shop'))]

	[for (aViewContainer : ViewContainer | aViewState.viewContainers.eAllContents(ViewContainer)) ]

	[if(aViewContainer.widget.name.equalsIgnoreCase('Table'))]

	['@'/](user_login: String = "", products_list: List['['/]models.ProductSale[']'/] = null)

	['@'/]import models.ProductSale
	
	['@'/]main("[aViewState.gen_viewstate_name().toUpperFirst()/]") {
	
		<div align="left">
		['@'/]if(products_list != null && !products_list.isEmpty()){
			<h3> [aViewContainer.name.replace('Table','')/] </h3>
			<ul>
			['@'/]for(p : ProductSale <- products_list) {
				<li>['@'/]p.product_info.label | ['@'/]p.price (x['@'/]p.stock)</li>
			}
			</ul>
		} else {
			(No products)
		}
		</div>
	
	}
	[/if]
	[/for]

	

	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('cart'))]
	
	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('informations'))]
	
	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('register'))]

	['@'/](myForm: Form['['/]structures.CustomerForm[']'/], errorMessage: String = "")
	['@'/]import structures.CustomerForm
	
	['@'/]main("[aViewState.gen_viewstate_name().toUpperFirst()/]") {
	
		[aViewState.gen_error() /]
		[for (aTransition : Transition | aCinematicRoot.flows.transitions) ]
		[if (aTransition.from.eGet('name').toString().equalsIgnoreCase(aViewState.name))]
		[if (aTransition.to->filter(ActionState)->size() = 1)]
		['@'/]helper.form(action = routes.MainController.[aTransition.to.actions.name/]())
		[/if]
		[/if]
		[/for]
		[for (aViewElement : ViewElement | aViewState.viewContainers.eAllContents(ViewElement))]
		[if (aViewElement.widget.name.toLower()='button')]
			<input type="submit" value="[aViewElement.label/]">
		[elseif (aViewElement.widget.name.toLower()='text')]
			['@'/]helper.inputText(myForm("[aViewElement.label/]"))
		[elseif (aViewElement.widget.name.toLower()='password')]
			['@'/]helper.inputPassword(myForm("[aViewElement.label/]"))
		[/if]
		[/for]
		}
	
	}
	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('payment'))]
	
	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('order'))]
	
	[elseif (aViewState.gen_viewstate_name().equalsIgnoreCase('product'))]
	
	[/if]
[/file]
[/for]
[/template]

